---
swagger: "2.0"
info:
  title: "Subsidy Service API"
  description: "Manage and allocate subsidies for real-time expense management. \n\nThroughout this documentation, *bank profile* will refer to a collection of bank accounts owned by the same entity, while *bank account* will refer to one specific account (i.e. having a single IBAN). Access to a bank profile from the subsidy service must be arranged with the service administrator. Similarly, a *subsidy* will refer to a specific allocation of funds into one account accessible by one citizen. A group of subsidies that are all for the same purpose should come from the same dedicated master-account. \n\nCurrently, profiles at the following banks are supported: \n\n* Bunq \n\n The bank information returned by `GET` calls is cached in the database. It is held as up to date as possible, but due to the caching it is not absolutely real-time. The information is updated as quickly as allowed by the bank APIs. \n\nWe are using the `deprecated` tag to mark endpoints that are planned but not yet implemented, these will return a 501. \n\nNOTA BENE: This definition is best edited in the Swagger web editor and saved in the project root, but we also store the internal working copy in the project, that is found in the autogenerated server zip and must be also downloaded; see the README."
  version: "1.0"

host: "subsidieservice.amsterdam.nl"
basePath: "/api/v1"

schemes:
- "https"

securityDefinitions:
  basic_auth:
    type: basic
    description: "Please arrange for a username and password with the subsidy service administrators"
  
tags:
- name: "master-accounts"
  description:  "Base accounts containing all the funds for a set of subsidies."
- name: "citizens"
  description:  "Citizens who may be receiving a subsidy."
- name: "subsidies"
  description:  "An allocation of funds from a master-account to a dedicated bank account for a specific citizen."
- name: "users"
  description: "May only be used by the administrator."


paths:
  /master-accounts:
    get:
      tags: 
      - "master-accounts"
      summary: "List all master-accounts."
      description: "Returns an overview list of master-accounts. These do not contain the transactions, to get transactions these please see `GET /master-accounts/{id}`. The `last_updated` property reflects the last time this entry was refreshed in the database, this is updated automatically."
      parameters:
        - in: "query"
          name: "initiative"
          type: string
          description: "An initiative to filter on; this is useful for clients interested only in the master accounts and associated transactions for a given initiative."
          required: false
      produces:
      - "application/json"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:                
              $ref: "#/definitions/master-account-base"
    #{
    # "name": "Test Master Account - file master-account.json",
    # "description": "This is a test master account; since no IBAN is provided, a new account will be created dynamically"
    #}
    #{
    # "name": "Test Master Account - file master-account-with-iban.json",
    # "description": "This is a test master account; an IBAN is provided, therefore the requested account will be attached; the IBAN must exist in the instantiated sandbox context - maybe just use the no-master call, delete it and resubmit the same IBAN (this is because of course by the deletion of a master account entry the underlying IBANs are *not* deleted)"
    #}     
    post:
      tags: 
      - "master-accounts"
      summary: "Create a new master-account"
      description: "A new master-account will be created in the system and assigned a unique id. If `iban` is provided, an account with that IBAN is assumed to exist in the linked bank profile, and this one will be added to the database for caching. If no `iban` is provided, a new bank account will be opened under the name of the linked account. The details of the new or existing account are returned."
      consumes:
      - "application/nl.kpmg.v1.master-account+json"
      produces: 
      - "application/nl.kpmg.v1.master-account+json"
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/master-account"
      parameters:
        - in: "body"
          name: "body"
          description: "master-account to add"
          required: True
          schema:
            $ref: "#/definitions/master-account-base"
                  
  /master-accounts/{id}:
    get:
      tags: 
      - "master-accounts"
      summary: "Get the details of a specific master-account"
      description: "The detailed view of a master-account includes the list of transactions to and from that master-account. The `id` should correspond to one of the `id`s listed by `GET /master-accounts` or the call will return a 404."
      produces:
      - "application/nl.kpmg.v1.master-account+json"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/master-account"
      parameters: 
      - in: "path"
        name: "id"
        type: "string"
        required: true
        
    put:
      deprecated: true
      tags: 
      - "master-accounts"
      summary: "Re-upload a master-account's information"
      consumes:
      - "application/nl.kpmg.v1.master-account+json"
      produces:
      - "application/nl.kpmg.v1.master-account+json"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/master-account"
      parameters: 
      - in: "path"
        name: "id"
        type: "string"
        required: true
      - in: "body"
        name: "body"
        description: "master-account details"
        required: True
        schema:
          $ref: "#/definitions/master-account"
        
    patch:
      deprecated: true
      tags: 
      - "master-accounts"
      summary: "Edit a master-account's information"
      consumes:
      - "application/nl.kpmg.v1.master-account+json"
      produces:
      - "application/nl.kpmg.v1.master-account+json"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/master-account"
      parameters: 
      - in: "path"
        name: "id"
        type: "string"
        required: true
      - in: "body"
        name: "body"
        description: "master-account properties to be updated"
        required: True
        schema:
          $ref: "#/definitions/master-account"
        
    delete:
      tags: 
      - "master-accounts"
      summary: "Remove a master-account"
      description: "Delete a master-account from the database. Note that this does **NOT** delete the account on the bank's end, it only removes it from the subsidy service system. The master account does not need to have zero balance. If the account itself is to be deleted, please also do this using the banking interface directly."
      responses:
        200:
          description: OK
      parameters: 
      - in: "path"
        name: "id"
        type: "string"
        required: true
  
  /citizens:
    get:
      tags: 
      - "citizens"
      summary: "List all citizens."
      description: "Lists all known information about every citizen in the database."
      produces:
      - "application/json"
      
      responses:
        200:
          description: OK
          schema:
            type: array
            items:                
              $ref: "#/definitions/citizen-base"
        401:
          description: Unauthorized
    
    #{
    # "id": "3665",
    # "name": "Elizabeth",
    # "email": "jen.elizabeth@bunq.nl",
    # "phone_number": "+31645707041"
    #}
    #Note: no validation takes place at this moment, i.e. it is not double-checked that these users exist.
    post:
      tags: 
      - "citizens"
      summary: "Create a new citizen"
      description: "A new citizen will be created in the database and assigned a unique id. The `name` and `phone_number` are required to make use of the subsidy service. The `phone_number` must be unique per citizen."
      consumes:
      - "application/nl.kpmg.v1.citizen+json"
      produces: 
      - "application/nl.kpmg.v1.citizen+json"
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/citizen"
      parameters:
        - in: "body"
          name: "body"
          description: "citizen to add"
          required: True
          schema:
            $ref: "#/definitions/citizen"
                  
  /citizens/{id}:
    get:
      tags: 
      - "citizens"
      summary: "Returns a specific citizen"
      description: "Get the information for a single citizen Currently no additional information is available compared to the list view." 
      produces:
      - "application/nl.kpmg.v1.citizen+json"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/citizen"
      parameters: 
      - in: "path"
        name: "id"
        type: "string"
        required: true
        
    put:
      deprecated: true
      tags: 
      - "citizens"
      summary: "Re-upload a citizen's information"
      consumes:
      - "application/nl.kpmg.v1.citizen+json"
      produces:
      - "application/nl.kpmg.v1.citizen+json"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/citizen"
      parameters: 
      - in: "path"
        name: "id"
        type: "string"
        required: true
      - in: "body"
        name: "body"
        description: "citizen details"
        required: True
        schema:
          $ref: "#/definitions/citizen"
          
    patch:
      deprecated: true
      tags: 
      - "citizens"
      summary: "Edit a citizen's information"
      consumes:
      - "application/nl.kpmg.v1.citizen+json"
      produces:
      - "application/nl.kpmg.v1.citizen+json"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/citizen"
      parameters: 
      - in: "path"
        name: "id"
        type: "string"
        required: true
      - in: "body"
        name: "body"
        description: "citizen properties to be updated"
        required: True
        schema:
          $ref: "#/definitions/citizen"
        
    delete:
      tags: 
      - "citizens"
      summary: "Remove a citizen"
      description: "Remove a citizen form the subsidy service database. The citizen should not have any active subsidies. If there are any active subsidies, this call will respond with 400 and the citizen will not be deleted."
      responses:
        200:
          description: OK
      parameters: 
      - in: "path"
        name: "id"
        type: "string"
        required: true

  /subsidies:
    get:
      tags: 
      - "subsidies"
      summary: "List all subsidies"
      description: "Subsidies are listed without their transactions. To get the transaction for the account associated with a particular subsidy, please use `GET /subsidies/{id}`."
      produces:
      - "application/json"
      parameters:
        - in: "query"
          name: "status"
          description: "The subsidy status filter can have the following values:\n\n* **PENDING_ACCOUNT**: The citizen does not yet have a profile at a supported bank, and so has not received the subsidy\n\n* **PENDING_ACCEPT**: The citizen does have an available bank profile, but has not yet accepted the request to access the subsidy account\n\n* **OPEN**: The citizen has access to the subsidy\n\n* **SHARE_CLOSED**: The citizen has canceled their access to the subsidy account and can no longer access the funds\n\n* **CLOSED**: The subsidy has been ended via the subsidy service and the associated bank account is closed\n\n* **ALL**: Lists all subsidies regardless of status.\n\nIf `status` left blank or not provided, this endpoint will list all PENDING_* and OPEN subsidies."
          required: False
          type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:                
              $ref: "#/definitions/subsidy-base"
        
    post:
      tags: 
      - "subsidies"
      summary: "Create a new subsidy"
      description: "When creating a new subsidy, the following steps are carried out:\n\n1. A new bank account is created under the configured bank profile\n\n2. The subsidy amount is transferred from the indicated `master` to the new account\n\n3. A share request is sent to the recipient\n\n For these reasons, the following fields are required in the body:\n\n* `master.id` or `master.iban` (the master must exist in the database)\n\n* `recipient.id` or `recipient.phone_number` (the recipient must exist in the database)\n\n* `amount`\n\n The remaining fields will be created by the server. Note that `start_date` and `end_date` are not yet implemented and so will be ignored.\n\n If the citizen has a bank profile at a supported bank and the share request was successfully sent, the `status` will come back as PENDING_ACCEPT. Otherwise, the `status` will come back as PENDING_ACCOUNT. The system will periodically attempt to resend the share request in case the citizen has created a bank profile."
      consumes:
      - "application/nl.kpmg.v1.subsidy-base+json"
      produces: 
      - "application/nl.kpmg.v1.subsidy-base+json"
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/subsidy"
      parameters:
        - in: "body"
          name: "body"
          description: "The subsidy to create"
          required: True
          schema:
            $ref: "#/definitions/subsidy-base"
                  
  /subsidies/{id}:
    get:
      tags: 
      - "subsidies"
      summary: "Returns a specific subsidy"
      description: "Subsidies gotten by `id` include all the information listed in `GET /subsidies`, plus all the transactions from the associated account."
      produces:
      - "application/nl.kpmg.v1.subsidy+json"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/subsidy"
      parameters: 
      - in: "path"
        name: "id"
        type: "string"
        required: true
        
    put:
      deprecated: true
      tags: 
      - "subsidies"
      summary: "Re-upload a subsidy's information"
      consumes:
      - "application/nl.kpmg.v1.subsidy+json"
      produces:
      - "application/nl.kpmg.v1.subsidy+json"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/subsidy"
      parameters: 
      - in: "path"
        name: "id"
        type: "string"
        required: true
      - in: "body"
        name: "body"
        description: "subsidy details"
        required: True
        schema:
          $ref: "#/definitions/subsidy-base"
          
    patch:
      deprecated: true
      tags: 
      - "subsidies"
      summary: "Edit a subsidy's information"
      consumes:
      - "application/nl.kpmg.v1.subsidy+json"
      produces:
      - "application/nl.kpmg.v1.subsidy+json"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/subsidy"
      parameters: 
      - in: "path"
        name: "id"
        type: "string"
        required: true
      - in: "body"
        name: "body"
        description: "subsidy properties to be updated"
        required: True
        schema:
          $ref: "#/definitions/subsidy-base"
        
    delete:
      tags: 
      - "subsidies"
      summary: "Close a subsidy"
      description: "When closing a subsidy, the following steps are carried out:\n\n* The share with the recipient citizen is ended, such that they lose access to the associated bank account\n\n* Any remaining funds are transferred from the bank account to the master account\n\n* The bank account is closed at the bank\n\n* The `status` is changed to CLOSED\n\nSince the object is never actually deleted from the database, past subsidies can still be inspected using `GET /subsidies/{id}`, or `GET /subsidies?status=CLOSED`."
      responses:
        200:
          description: OK
      parameters: 
      - in: "path"
        name: "id"
        type: "string"
        required: true
        
  /subsidies/payments:
    post:
      tags: 
      - "subsidies"
      summary: "Perform a one-off payment transfering a desired amount to the subsidy from the associated master account."
      description: "Sometimes the subsidy owner has to pay for unforeseen expenses from the budget of the subsidy itself. In mobility contexts for example, this could be the deposit for renting a car. This functionality offers the option to top-up an existing subsidy. It will be recorded as a standard transaction from the master account."
      consumes:
      - "application/nl.kpmg.v1.payment+json"
      produces: 
      - "application/nl.kpmg.v1.payment+json"
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/payment"
      parameters:
        - in: "body"
          name: "body"
          description: "The payment to send"
          required: True
          schema:
            $ref: "#/definitions/payment"
  
  /subsidies/transactions:
    get:
      tags: 
      - "subsidies"
      summary: "Download all transactions; supports filtering."
      description: "For each known subsidy, its transactions are returned as a CSV. It supports ISO date filtering so that just the transactions in a given time interval may be returned. If no filter is provided, then all transactions from the very beginning are returned."
      parameters:
        - in: "query"
          name: "start"
          type: string
          description: "The start date for the report. Must be used together with `end`."
          required: false
        - in: "query"
          name: "end"
          type: string
          description: "The end date for the report. Must be used together with `start`."
          required: false
      produces:
      - "text/csv"
      responses:
        200:
          description: "CSV dump"
          schema:
            type: file

  /subsidies/{id}/actions/approve:
    post:
      deprecated: true
      tags: 
        - "subsidies"
      summary: "Approve a subsidy"
      consumes:
      - "application/nl.kpmg.v1.user+json"
      produces:
      - "application/nl.kpmg.v1.user+json"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/subsidy"
      parameters: 
      - in: "path"
        name: "id"
        type: "string"
        required: true
      - in: "body"
        name: "body"
        description: "user approving subsidy"
        required: True
        schema:
          $ref: "#/definitions/user"
  
  /initiatives:
    get:
      tags:
        - "initiatives"
      summary: "List all smart subsidy initiatives"
      description: "A subsidy initiative, like MaaS for example. One and exactly one of the instances is flagged as default: domain entities not carrying an initiative field of their own will be assumed to be under the default one; this is very important to maintain backwards compatibility."
      produces:
      - "application/json"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:                
              $ref: "#/definitions/initiative"
    post:
      tags: 
      - "initiatives"
      summary: "Create a new initiative; names must be unique."
      consumes:
      - "application/nl.kpmg.v1.initiative+json"
      produces: 
      - "application/nl.kpmg.v1.initiative+json"
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/initiative"
      parameters:
        - in: "body"
          name: "body"
          description: "The initiative to create"
          required: True
          schema:
            $ref: "#/definitions/initiative"
    delete:
      deprecated: true
      tags: 
      - "initiatives"
      summary: "Delete an initiative."
      description: "Delete an initiative - this just removes the instance, no associated data e.g. master accounts are modified. Attention: when no initiative argument is provided to the endpoints, all entities of unknown or missing initiative (that is, the initiative field is null or it has an unkown value), are returned, so all data will always be accessible. But it is highly suggested to always keep consistency by not removing initiatives, and to always keep a default one."
      responses:
        200:
          description: OK
      parameters: 
      - in: "path"
        name: "id"
        type: "string"
        required: true
  
  /login:
    post:
      summary: "Login a user; this a virtual endpoint to just confirm the user exists. Also important to see whether a user is an admin or not."
      consumes:
      - "application/nl.kpmg.v1.user+json"
      produces: 
      - "application/nl.kpmg.v1.user+json"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/user"
      parameters:
        - in: "body"
          name: "body"
          description: "The user to login"
          required: True
          schema:
            $ref: "#/definitions/user"
  
  /users:
    get:
      tags:
        - "users"
      summary: "List all API users created by the administrator. One of the users is flagged as the administrator; that is the very first user created and may not be deleted."
      produces:
      - "application/json"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:                
              $ref: "#/definitions/user"
    post:
      tags: 
      - "users"
      summary: "Create a new user."
      consumes:
      - "application/nl.kpmg.v1.user+json"
      produces: 
      - "application/nl.kpmg.v1.user+json"
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/user"
      parameters:
        - in: "body"
          name: "body"
          description: "The user to create"
          required: True
          schema:
            $ref: "#/definitions/user"

  /users/{id}:
    patch:
      tags: 
      - "users"
      summary: "Edit a user's information; at the moment of writing, its pass or admin rights."
      consumes:
      - "application/nl.kpmg.v1.user+json"
      produces:
      - "application/nl.kpmg.v1.user+json"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/user"
      parameters:
      - in: "path"
        name: "id"
        type: "string"
        required: true
      - in: "body"
        name: "body"
        description: "user properties to be updated; at the moment of writing, its pass."
        required: True
        schema:
          $ref: "#/definitions/user"
    delete:
      tags: 
      - "users"
      summary: "Delete a user. The administrator user may not be deleted."
      responses:
        200:
          description: OK
      parameters: 
      - in: "path"
        name: "id"
        type: "string"
        required: true
         
definitions:

  user:
    description: "A user of the subsidy Allocation API. Users must be created by the administrator. "
    type: object
    properties:
      id:
        type: string
      username:
        type: string
      password:
        type: string
        format: password
      is_admin:
        type: boolean
      real_name:
        type: string
      email:
        type: string
        format: email
      phone_number:
        type: string
        
  account-base:
    description: "A bank account"
    type: object
    properties:
      name:
        type: string
        description: "The name of the account holder"
      # account_type:
      #   type: string
      description:
        type: string
      iban:
        type: string
      balance:
        type: number
      last_updated:
        type: string
        description: "Time of last refresh in the database"
  
  account:
    description: "A full bank account include transactions"
    allOf: 
    - $ref: "#/definitions/account-base"
    - type: object
      properties:
        transactions:
          type: array
          items:
            $ref: "#/definitions/transaction"

  master-account-base:
    description: "A master-account-base serves as the source for a specific class of subsidy"
    allOf:
    - $ref: "#/definitions/account-base"
    - type: object
      properties:
        id: 
          type: string
          description: "The database ID (for use with `GET`)"
        initiative:
          $ref: "#/definitions/initiative"
          
  master-account:
    description: "A master-account serves as the source for a specific class of subsidy"
    allOf:
    - $ref: "#/definitions/master-account-base"
    - $ref: "#/definitions/account"
    # - type: object
    #   properties:
    #     subsidies:
    #       type: array
    #       items:
    #         $ref: "#/definitions/subsidy-base"
    #     viewers:
    #       type: array
    #       items:
    #         $ref: "#/definitions/user"
    #     admins:
    #       type: array
    #       items:
    #         $ref: "#/definitions/user"
    
    
  
  citizen-base:
    description: "A citizen who may be receiving subsidies"
    type: object
    properties:
      id:
        type: string
        description: "The database ID (for use with `GET`)"
      name:
        type: string
      email:
        type: string
      phone_number:
        type: string
        description: "Must be the phone number associated with the citizen's bank profile at a supported bank."


  citizen:
    description: "A citizen who may be receiving subsidies"
    allOf:
    - $ref: "#/definitions/citizen-base"
    # - type: object
    #   properties:
    #     subsidies:
    #       type: array
    #       items: 
    #         $ref: "#/definitions/subsidy-base"
            
  subsidy-base:
    description: "A recurring allocation of funds made available from a master-account to a recipient citizen's account"
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      master:
        $ref: "#/definitions/master-account-base"
      recipient:
        $ref: "#/definitions/citizen-base"
      account:
        $ref: "#/definitions/account-base"
      frequency:
        type: string
        description: "Not yet implemented, value currently ignored"
        # enum:
        # - "once"
        # - "daily"
        # - "weekly"
        # - "bi-weekly"
        # - "monthly"
        # - "yearly"
      amount:
        type: number
        minimum: 0
      start_date:
        type: string
        format: date
        description: "Not yet implemented, value currently ignored"
      end_date:
        type: string
        format: date
        description: "Not yet implemented, value currently ignored"
      comment:
        type: string
      status:
        type: string
      last_updated:
        type: string
        description: "Time of last refresh in the database"
        # enum:
        # - 
        # - PENDING_APPROVAL
        # - PENDING_CONNECTION
        # - OPEN
        # - CLOSED
        # - CONNECTION_FAILED

  subsidy:
    description: "A recurring allocation of funds made available from a master-account to a recipient citizen's account"
    allOf:
      - $ref: "#/definitions/subsidy-base"
      - type: object
        properties:
          account:
            $ref: "#/definitions/account"
            
  transaction:
    type: object
    properties:
      counterparty_name:
        type: string
      counterparty_iban:
        type: string
      description:
        type: string
      amount:
        type: number
      timestamp:
        type: string
        format: date-time
        
  payment:
    type: object
    properties:
      name:
        type: string
      amount: 
        type: number
        minimum: 0
        maximum: 500
      comment:
        type: string
      from:
        $ref: "#/definitions/master-account-base"
      to:
        $ref: "#/definitions/subsidy-base"
        
  initiative:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      default:
        type: boolean
      
