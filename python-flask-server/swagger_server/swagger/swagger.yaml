---
swagger: "2.0"
info:
  description: "Manage and allocate subsidies for real-time expense management. \n\
    \nThroughout this documentation, *bank profile* will refer to a collection of\
    \ bank accounts owned by the same entity, while *bank account* will refer to one\
    \ specific account (i.e. having a single IBAN). Access to a bank profile from\
    \ the subsidy service must be arranged with the service administrator. Similarly,\
    \ a *subsidy* will refer to a specific allocation of funds into one account accessible\
    \ by one citizen. A group of subsidies that are all for the same purpose should\
    \ come from the same dedicated master-account. \n\nCurrently, profiles at the\
    \ following banks are supported: \n\n* Bunq \n\n The bank information returned\
    \ by `GET` calls is cached in the database. It is held as up to date as possible,\
    \ but due to the caching it is not absolutely real-time. The information is updated\
    \ as quickly as allowed by the bank APIs. \n\nWe are using the `deprecated` tag\
    \ to mark endpoints that are planned but not yet implemented, these will return\
    \ a 501. \n\nNOTA BENE: This definition is best edited in the Swagger web editor\
    \ and saved in the project root, but we also store the internal working copy in\
    \ the project, that is found in the autogenerated server zip and must be also\
    \ downloaded; see the README."
  version: "1.0"
  title: "Subsidy Service API"
host: "subsidieservice.amsterdam.nl"
basePath: "/api/v1"
tags:
- name: "master-accounts"
  description: "Base accounts containing all the funds for a set of subsidies."
- name: "citizens"
  description: "Citizens who may be receiving a subsidy."
- name: "subsidies"
  description: "An allocation of funds from a master-account to a dedicated bank account\
    \ for a specific citizen."
- name: "users"
  description: "May only be used by the administrator."
schemes:
- "https"
paths:
  /master-accounts:
    get:
      tags:
      - "master-accounts"
      summary: "List all master-accounts."
      description: "Returns an overview list of master-accounts. These do not contain\
        \ the transactions, to get transactions these please see `GET /master-accounts/{id}`.\
        \ The `last_updated` property reflects the last time this entry was refreshed\
        \ in the database, this is updated automatically."
      operationId: "master_accounts_get"
      produces:
      - "application/json"
      parameters:
      - name: "initiative"
        in: "query"
        description: "An initiative to filter on; this is useful for clients interested\
          \ only in the master accounts and associated transactions for a given initiative."
        required: false
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/master-account-base"
      x-swagger-router-controller: "swagger_server.controllers.master_accounts_controller"
    post:
      tags:
      - "master-accounts"
      summary: "Create a new master-account"
      description: "A new master-account will be created in the system and assigned\
        \ a unique id. If `iban` is provided, an account with that IBAN is assumed\
        \ to exist in the linked bank profile, and this one will be added to the database\
        \ for caching. If no `iban` is provided, a new bank account will be opened\
        \ under the name of the linked account. The details of the new or existing\
        \ account are returned."
      operationId: "master_accounts_post"
      consumes:
      - "application/nl.kpmg.v1.master-account+json"
      produces:
      - "application/nl.kpmg.v1.master-account+json"
      parameters:
      - in: "body"
        name: "body"
        description: "master-account to add"
        required: true
        schema:
          $ref: "#/definitions/master-account-base"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/master-account"
      x-swagger-router-controller: "swagger_server.controllers.master_accounts_controller"
  /master-accounts/{id}:
    get:
      tags:
      - "master-accounts"
      summary: "Get the details of a specific master-account"
      description: "The detailed view of a master-account includes the list of transactions\
        \ to and from that master-account. The `id` should correspond to one of the\
        \ `id`s listed by `GET /master-accounts` or the call will return a 404."
      operationId: "master_accounts_id_get"
      produces:
      - "application/nl.kpmg.v1.master-account+json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/master-account"
      x-swagger-router-controller: "swagger_server.controllers.master_accounts_controller"
    put:
      tags:
      - "master-accounts"
      summary: "Re-upload a master-account's information"
      operationId: "master_accounts_id_put"
      consumes:
      - "application/nl.kpmg.v1.master-account+json"
      produces:
      - "application/nl.kpmg.v1.master-account+json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "master-account details"
        required: true
        schema:
          $ref: "#/definitions/master-account"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/master-account"
      deprecated: true
      x-swagger-router-controller: "swagger_server.controllers.master_accounts_controller"
    delete:
      tags:
      - "master-accounts"
      summary: "Remove a master-account"
      description: "Delete a master-account from the database. Note that this does\
        \ **NOT** delete the account on the bank's end, it only removes it from the\
        \ subsidy service system. The master account does not need to have zero balance.\
        \ If the account itself is to be deleted, please also do this using the banking\
        \ interface directly."
      operationId: "master_accounts_id_delete"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      x-swagger-router-controller: "swagger_server.controllers.master_accounts_controller"
    patch:
      tags:
      - "master-accounts"
      summary: "Edit a master-account's information"
      operationId: "master_accounts_id_patch"
      consumes:
      - "application/nl.kpmg.v1.master-account+json"
      produces:
      - "application/nl.kpmg.v1.master-account+json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "master-account properties to be updated"
        required: true
        schema:
          $ref: "#/definitions/master-account"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/master-account"
      deprecated: true
      x-swagger-router-controller: "swagger_server.controllers.master_accounts_controller"
  /citizens:
    get:
      tags:
      - "citizens"
      summary: "List all citizens."
      description: "Lists all known information about every citizen in the database."
      operationId: "citizens_get"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/citizen-base"
        401:
          description: "Unauthorized"
      x-swagger-router-controller: "swagger_server.controllers.citizens_controller"
    post:
      tags:
      - "citizens"
      summary: "Create a new citizen"
      description: "A new citizen will be created in the database and assigned a unique\
        \ id. The `name` and `phone_number` are required to make use of the subsidy\
        \ service. The `phone_number` must be unique per citizen."
      operationId: "citizens_post"
      consumes:
      - "application/nl.kpmg.v1.citizen+json"
      produces:
      - "application/nl.kpmg.v1.citizen+json"
      parameters:
      - in: "body"
        name: "body"
        description: "citizen to add"
        required: true
        schema:
          $ref: "#/definitions/citizen"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/citizen"
      x-swagger-router-controller: "swagger_server.controllers.citizens_controller"
  /citizens/{id}:
    get:
      tags:
      - "citizens"
      summary: "Returns a specific citizen"
      description: "Get the information for a single citizen Currently no additional\
        \ information is available compared to the list view."
      operationId: "citizens_id_get"
      produces:
      - "application/nl.kpmg.v1.citizen+json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/citizen"
      x-swagger-router-controller: "swagger_server.controllers.citizens_controller"
    put:
      tags:
      - "citizens"
      summary: "Re-upload a citizen's information"
      operationId: "citizens_id_put"
      consumes:
      - "application/nl.kpmg.v1.citizen+json"
      produces:
      - "application/nl.kpmg.v1.citizen+json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "citizen details"
        required: true
        schema:
          $ref: "#/definitions/citizen"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/citizen"
      deprecated: true
      x-swagger-router-controller: "swagger_server.controllers.citizens_controller"
    delete:
      tags:
      - "citizens"
      summary: "Remove a citizen"
      description: "Remove a citizen form the subsidy service database. The citizen\
        \ should not have any active subsidies. If there are any active subsidies,\
        \ this call will respond with 400 and the citizen will not be deleted."
      operationId: "citizens_id_delete"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      x-swagger-router-controller: "swagger_server.controllers.citizens_controller"
    patch:
      tags:
      - "citizens"
      summary: "Edit a citizen's information"
      operationId: "citizens_id_patch"
      consumes:
      - "application/nl.kpmg.v1.citizen+json"
      produces:
      - "application/nl.kpmg.v1.citizen+json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "citizen properties to be updated"
        required: true
        schema:
          $ref: "#/definitions/citizen"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/citizen"
      deprecated: true
      x-swagger-router-controller: "swagger_server.controllers.citizens_controller"
  /subsidies:
    get:
      tags:
      - "subsidies"
      summary: "List all subsidies"
      description: "Subsidies are listed without their transactions. To get the transaction\
        \ for the account associated with a particular subsidy, please use `GET /subsidies/{id}`."
      operationId: "subsidies_get"
      produces:
      - "application/json"
      parameters:
      - name: "status"
        in: "query"
        description: "The subsidy status filter can have the following values:\n\n\
          * **PENDING_ACCOUNT**: The citizen does not yet have a profile at a supported\
          \ bank, and so has not received the subsidy\n\n* **PENDING_ACCEPT**: The\
          \ citizen does have an available bank profile, but has not yet accepted\
          \ the request to access the subsidy account\n\n* **OPEN**: The citizen has\
          \ access to the subsidy\n\n* **SHARE_CLOSED**: The citizen has canceled\
          \ their access to the subsidy account and can no longer access the funds\n\
          \n* **CLOSED**: The subsidy has been ended via the subsidy service and the\
          \ associated bank account is closed\n\n* **ALL**: Lists all subsidies regardless\
          \ of status.\n\nIf `status` left blank or not provided, this endpoint will\
          \ list all PENDING_* and OPEN subsidies."
        required: false
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/subsidy-base"
      x-swagger-router-controller: "swagger_server.controllers.subsidies_controller"
    post:
      tags:
      - "subsidies"
      summary: "Create a new subsidy"
      description: "When creating a new subsidy, the following steps are carried out:\n\
        \n1. A new bank account is created under the configured bank profile\n\n2.\
        \ The subsidy amount is transferred from the indicated `master` to the new\
        \ account\n\n3. A share request is sent to the recipient\n\n For these reasons,\
        \ the following fields are required in the body:\n\n* `master.id` or `master.iban`\
        \ (the master must exist in the database)\n\n* `recipient.id` or `recipient.phone_number`\
        \ (the recipient must exist in the database)\n\n* `amount`\n\n The remaining\
        \ fields will be created by the server. Note that `start_date` and `end_date`\
        \ are not yet implemented and so will be ignored.\n\n If the citizen has a\
        \ bank profile at a supported bank and the share request was successfully\
        \ sent, the `status` will come back as PENDING_ACCEPT. Otherwise, the `status`\
        \ will come back as PENDING_ACCOUNT. The system will periodically attempt\
        \ to resend the share request in case the citizen has created a bank profile."
      operationId: "subsidies_post"
      consumes:
      - "application/nl.kpmg.v1.subsidy-base+json"
      produces:
      - "application/nl.kpmg.v1.subsidy-base+json"
      parameters:
      - in: "body"
        name: "body"
        description: "The subsidy to create"
        required: true
        schema:
          $ref: "#/definitions/subsidy-base"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/subsidy"
      x-swagger-router-controller: "swagger_server.controllers.subsidies_controller"
  /subsidies/{id}:
    get:
      tags:
      - "subsidies"
      summary: "Returns a specific subsidy"
      description: "Subsidies gotten by `id` include all the information listed in\
        \ `GET /subsidies`, plus all the transactions from the associated account."
      operationId: "subsidies_id_get"
      produces:
      - "application/nl.kpmg.v1.subsidy+json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/subsidy"
      x-swagger-router-controller: "swagger_server.controllers.subsidies_controller"
    put:
      tags:
      - "subsidies"
      summary: "Re-upload a subsidy's information"
      operationId: "subsidies_id_put"
      consumes:
      - "application/nl.kpmg.v1.subsidy+json"
      produces:
      - "application/nl.kpmg.v1.subsidy+json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "subsidy details"
        required: true
        schema:
          $ref: "#/definitions/subsidy-base"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/subsidy"
      deprecated: true
      x-swagger-router-controller: "swagger_server.controllers.subsidies_controller"
    delete:
      tags:
      - "subsidies"
      summary: "Close a subsidy"
      description: "When closing a subsidy, the following steps are carried out:\n\
        \n* The share with the recipient citizen is ended, such that they lose access\
        \ to the associated bank account\n\n* Any remaining funds are transferred\
        \ from the bank account to the master account\n\n* The bank account is closed\
        \ at the bank\n\n* The `status` is changed to CLOSED\n\nSince the object is\
        \ never actually deleted from the database, past subsidies can still be inspected\
        \ using `GET /subsidies/{id}`, or `GET /subsidies?status=CLOSED`."
      operationId: "subsidies_id_delete"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      x-swagger-router-controller: "swagger_server.controllers.subsidies_controller"
    patch:
      tags:
      - "subsidies"
      summary: "Edit a subsidy's information"
      operationId: "subsidies_id_patch"
      consumes:
      - "application/nl.kpmg.v1.subsidy+json"
      produces:
      - "application/nl.kpmg.v1.subsidy+json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "subsidy properties to be updated"
        required: true
        schema:
          $ref: "#/definitions/subsidy-base"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/subsidy"
      deprecated: true
      x-swagger-router-controller: "swagger_server.controllers.subsidies_controller"
  /subsidies/payments:
    post:
      tags:
      - "subsidies"
      summary: "Perform a one-off payment transfering a desired amount to the subsidy\
        \ from the associated master account."
      description: "Sometimes the subsidy owner has to pay for unforeseen expenses\
        \ from the budget of the subsidy itself. In mobility contexts for example,\
        \ this could be the deposit for renting a car. This functionality offers the\
        \ option to top-up an existing subsidy. It will be recorded as a standard\
        \ transaction from the master account."
      operationId: "subsidies_payments_post"
      consumes:
      - "application/nl.kpmg.v1.payment+json"
      produces:
      - "application/nl.kpmg.v1.payment+json"
      parameters:
      - in: "body"
        name: "body"
        description: "The payment to send"
        required: true
        schema:
          $ref: "#/definitions/payment"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/payment"
      x-swagger-router-controller: "swagger_server.controllers.subsidies_controller"
  /subsidies/transactions:
    get:
      tags:
      - "subsidies"
      summary: "Download all transactions; supports filtering."
      description: "For each known subsidy, its transactions are returned as a CSV.\
        \ It supports ISO date filtering so that just the transactions in a given\
        \ time interval may be returned. If no filter is provided, then all transactions\
        \ from the very beginning are returned."
      operationId: "subsidies_transactions_get"
      produces:
      - "text/csv"
      parameters:
      - name: "from"
        in: "query"
        description: "The start date for the report. Must be used together with `to`."
        required: false
        type: "string"
        format: "date"
      - name: "to"
        in: "query"
        description: "The end date for the report. Must be used together with `from`."
        required: false
        type: "string"
        format: "date"
      responses:
        200:
          description: "CSV dump"
          schema:
            type: "file"
      x-swagger-router-controller: "swagger_server.controllers.subsidies_controller"
  /subsidies/{id}/actions/approve:
    post:
      tags:
      - "subsidies"
      summary: "Approve a subsidy"
      operationId: "subsidies_id_actions_approve_post"
      consumes:
      - "application/nl.kpmg.v1.user+json"
      produces:
      - "application/nl.kpmg.v1.user+json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "user approving subsidy"
        required: true
        schema:
          $ref: "#/definitions/user"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/subsidy"
      deprecated: true
      x-swagger-router-controller: "swagger_server.controllers.subsidies_controller"
  /initiatives:
    get:
      tags:
      - "initiatives"
      summary: "List all smart subsidy initiatives"
      description: "A subsidy initiative, like MaaS for example. One and exactly one\
        \ of the instances is flagged as default: domain entities not carrying an\
        \ initiative field of their own will be assumed to be under the default one;\
        \ this is very important to maintain backwards compatibility."
      operationId: "initiatives_get"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/initiative"
      x-swagger-router-controller: "swagger_server.controllers.initiatives_controller"
    post:
      tags:
      - "initiatives"
      summary: "Create a new initiative; names must be unique."
      operationId: "initiatives_post"
      consumes:
      - "application/nl.kpmg.v1.initiative+json"
      produces:
      - "application/nl.kpmg.v1.initiative+json"
      parameters:
      - in: "body"
        name: "body"
        description: "The initiative to create"
        required: true
        schema:
          $ref: "#/definitions/initiative"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/initiative"
      x-swagger-router-controller: "swagger_server.controllers.initiatives_controller"
    delete:
      tags:
      - "initiatives"
      summary: "Delete an initiative."
      description: "Delete an initiative - this just removes the instance, no associated\
        \ data e.g. master accounts are modified. Attention: when no initiative argument\
        \ is provided to the endpoints, all entities of unknown or missing initiative\
        \ (that is, the initiative field is null or it has an unkown value), are returned,\
        \ so all data will always be accessible. But it is highly suggested to always\
        \ keep consistency by not removing initiatives, and to always keep a default\
        \ one."
      operationId: "initiatives_delete"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      deprecated: true
      x-swagger-router-controller: "swagger_server.controllers.initiatives_controller"
  /login:
    post:
      summary: "Login a user; this a virtual endpoint to just confirm the user exists.\
        \ Also important to see whether a user is an admin or not."
      operationId: "login_post"
      consumes:
      - "application/nl.kpmg.v1.user+json"
      produces:
      - "application/nl.kpmg.v1.user+json"
      parameters:
      - in: "body"
        name: "body"
        description: "The user to login"
        required: true
        schema:
          $ref: "#/definitions/user"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/user"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /users:
    get:
      tags:
      - "users"
      summary: "List all API users created by the administrator. One of the users\
        \ is flagged as the administrator; that is the very first user created and\
        \ may not be deleted."
      operationId: "users_get"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/user"
      x-swagger-router-controller: "swagger_server.controllers.users_controller"
    post:
      tags:
      - "users"
      summary: "Create a new user."
      operationId: "users_post"
      consumes:
      - "application/nl.kpmg.v1.user+json"
      produces:
      - "application/nl.kpmg.v1.user+json"
      parameters:
      - in: "body"
        name: "body"
        description: "The user to create"
        required: true
        schema:
          $ref: "#/definitions/user"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/user"
      x-swagger-router-controller: "swagger_server.controllers.users_controller"
  /users/{id}:
    delete:
      tags:
      - "users"
      summary: "Delete a user. The administrator user may not be deleted."
      operationId: "users_id_delete"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      x-swagger-router-controller: "swagger_server.controllers.users_controller"
    patch:
      tags:
      - "users"
      summary: "Edit a user's information; at the moment of writing, its pass or admin\
        \ rights."
      operationId: "users_id_patch"
      consumes:
      - "application/nl.kpmg.v1.user+json"
      produces:
      - "application/nl.kpmg.v1.user+json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "user properties to be updated; at the moment of writing, its\
          \ pass and admin rights."
        required: true
        schema:
          $ref: "#/definitions/user"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/user"
      x-swagger-router-controller: "swagger_server.controllers.users_controller"
securityDefinitions:
  basic_auth:
    description: "Please arrange for a username and password with the subsidy service\
      \ administrators"
    type: "basic"
definitions:
  user:
    type: "object"
    properties:
      id:
        type: "string"
      username:
        type: "string"
      password:
        type: "string"
        format: "password"
      is_admin:
        type: "boolean"
      real_name:
        type: "string"
      email:
        type: "string"
        format: "email"
      phone_number:
        type: "string"
    description: "A user of the subsidy Allocation API. Users must be created by the\
      \ administrator. "
    example:
      is_admin: true
      password: "password"
      real_name: "real_name"
      phone_number: "phone_number"
      id: "id"
      email: "email"
      username: "username"
  account-base:
    type: "object"
    properties:
      name:
        type: "string"
        description: "The name of the account holder"
      description:
        type: "string"
      iban:
        type: "string"
      balance:
        type: "number"
      last_updated:
        type: "string"
        description: "Time of last refresh in the database"
    description: "A bank account"
    example:
      last_updated: "last_updated"
      balance: 0.80082819046101150206595775671303272247314453125
      iban: "iban"
      name: "name"
      description: "description"
  account:
    allOf:
    - $ref: "#/definitions/account-base"
    - type: "object"
      properties:
        transactions:
          type: "array"
          items:
            $ref: "#/definitions/transaction"
    description: "A full bank account include transactions"
  master-account-base:
    allOf:
    - $ref: "#/definitions/account-base"
    - type: "object"
      properties:
        id:
          type: "string"
          description: "The database ID (for use with `GET`)"
        initiative:
          $ref: "#/definitions/initiative"
    description: "A master-account-base serves as the source for a specific class\
      \ of subsidy"
  master-account:
    allOf:
    - $ref: "#/definitions/master-account-base"
    - $ref: "#/definitions/account"
    description: "A master-account serves as the source for a specific class of subsidy"
  citizen-base:
    type: "object"
    properties:
      id:
        type: "string"
        description: "The database ID (for use with `GET`)"
      name:
        type: "string"
      email:
        type: "string"
      phone_number:
        type: "string"
        description: "Must be the phone number associated with the citizen's bank\
          \ profile at a supported bank."
    description: "A citizen who may be receiving subsidies"
    example:
      name: "name"
      phone_number: "phone_number"
      id: "id"
      email: "email"
  citizen:
    allOf:
    - $ref: "#/definitions/citizen-base"
    - {}
    description: "A citizen who may be receiving subsidies"
  subsidy-base:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      master:
        $ref: "#/definitions/master-account-base"
      recipient:
        $ref: "#/definitions/citizen-base"
      account:
        $ref: "#/definitions/account-base"
      frequency:
        type: "string"
        description: "Not yet implemented, value currently ignored"
      amount:
        type: "number"
        minimum: 0
      start_date:
        type: "string"
        format: "date"
        description: "Not yet implemented, value currently ignored"
      end_date:
        type: "string"
        format: "date"
        description: "Not yet implemented, value currently ignored"
      comment:
        type: "string"
      status:
        type: "string"
      last_updated:
        type: "string"
        description: "Time of last refresh in the database"
    description: "A recurring allocation of funds made available from a master-account\
      \ to a recipient citizen's account"
    example:
      end_date: "2000-01-23"
      amount: 0.602745618307040320615897144307382404804229736328125
      last_updated: "last_updated"
      name: "name"
      recipient:
        name: "name"
        phone_number: "phone_number"
        id: "id"
        email: "email"
      comment: "comment"
      id: "id"
      account:
        last_updated: "last_updated"
        balance: 0.80082819046101150206595775671303272247314453125
        iban: "iban"
        name: "name"
        description: "description"
      master: ""
      frequency: "frequency"
      start_date: "2000-01-23"
      status: "status"
  subsidy:
    allOf:
    - $ref: "#/definitions/subsidy-base"
    - type: "object"
      properties:
        account:
          $ref: "#/definitions/account"
    description: "A recurring allocation of funds made available from a master-account\
      \ to a recipient citizen's account"
  transaction:
    type: "object"
    properties:
      counterparty_name:
        type: "string"
      counterparty_iban:
        type: "string"
      description:
        type: "string"
      amount:
        type: "number"
      timestamp:
        type: "string"
        format: "date-time"
  payment:
    type: "object"
    properties:
      name:
        type: "string"
      amount:
        type: "number"
        minimum: 0
        maximum: 500
      comment:
        type: "string"
      from:
        $ref: "#/definitions/master-account-base"
      to:
        $ref: "#/definitions/subsidy-base"
  initiative:
    type: "object"
    properties:
      name:
        type: "string"
      default:
        type: "boolean"
    example:
      default: true
      name: "name"
