# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.subsidylogitem_mutation import SubsidylogitemMutation  # noqa: F401,E501
from swagger_server.models.user import User  # noqa: F401,E501
from swagger_server import util


class SubsidyLogItem(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, creator: User=None, approver: User=None, create_date: datetime=None, approve_date: datetime=None, description: str=None, mutation: SubsidylogitemMutation=None):  # noqa: E501
        """SubsidyLogItem - a model defined in Swagger

        :param creator: The creator of this SubsidyLogItem.  # noqa: E501
        :type creator: User
        :param approver: The approver of this SubsidyLogItem.  # noqa: E501
        :type approver: User
        :param create_date: The create_date of this SubsidyLogItem.  # noqa: E501
        :type create_date: datetime
        :param approve_date: The approve_date of this SubsidyLogItem.  # noqa: E501
        :type approve_date: datetime
        :param description: The description of this SubsidyLogItem.  # noqa: E501
        :type description: str
        :param mutation: The mutation of this SubsidyLogItem.  # noqa: E501
        :type mutation: SubsidylogitemMutation
        """
        self.swagger_types = {
            'creator': User,
            'approver': User,
            'create_date': datetime,
            'approve_date': datetime,
            'description': str,
            'mutation': SubsidylogitemMutation
        }

        self.attribute_map = {
            'creator': 'creator',
            'approver': 'approver',
            'create_date': 'create_date',
            'approve_date': 'approve_date',
            'description': 'description',
            'mutation': 'mutation'
        }

        self._creator = creator
        self._approver = approver
        self._create_date = create_date
        self._approve_date = approve_date
        self._description = description
        self._mutation = mutation

    @classmethod
    def from_dict(cls, dikt) -> 'SubsidyLogItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The subsidy-log-item of this SubsidyLogItem.  # noqa: E501
        :rtype: SubsidyLogItem
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creator(self) -> User:
        """Gets the creator of this SubsidyLogItem.


        :return: The creator of this SubsidyLogItem.
        :rtype: User
        """
        return self._creator

    @creator.setter
    def creator(self, creator: User):
        """Sets the creator of this SubsidyLogItem.


        :param creator: The creator of this SubsidyLogItem.
        :type creator: User
        """

        self._creator = creator

    @property
    def approver(self) -> User:
        """Gets the approver of this SubsidyLogItem.


        :return: The approver of this SubsidyLogItem.
        :rtype: User
        """
        return self._approver

    @approver.setter
    def approver(self, approver: User):
        """Sets the approver of this SubsidyLogItem.


        :param approver: The approver of this SubsidyLogItem.
        :type approver: User
        """

        self._approver = approver

    @property
    def create_date(self) -> datetime:
        """Gets the create_date of this SubsidyLogItem.


        :return: The create_date of this SubsidyLogItem.
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date: datetime):
        """Sets the create_date of this SubsidyLogItem.


        :param create_date: The create_date of this SubsidyLogItem.
        :type create_date: datetime
        """

        self._create_date = create_date

    @property
    def approve_date(self) -> datetime:
        """Gets the approve_date of this SubsidyLogItem.


        :return: The approve_date of this SubsidyLogItem.
        :rtype: datetime
        """
        return self._approve_date

    @approve_date.setter
    def approve_date(self, approve_date: datetime):
        """Sets the approve_date of this SubsidyLogItem.


        :param approve_date: The approve_date of this SubsidyLogItem.
        :type approve_date: datetime
        """

        self._approve_date = approve_date

    @property
    def description(self) -> str:
        """Gets the description of this SubsidyLogItem.


        :return: The description of this SubsidyLogItem.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this SubsidyLogItem.


        :param description: The description of this SubsidyLogItem.
        :type description: str
        """

        self._description = description

    @property
    def mutation(self) -> SubsidylogitemMutation:
        """Gets the mutation of this SubsidyLogItem.


        :return: The mutation of this SubsidyLogItem.
        :rtype: SubsidylogitemMutation
        """
        return self._mutation

    @mutation.setter
    def mutation(self, mutation: SubsidylogitemMutation):
        """Sets the mutation of this SubsidyLogItem.


        :param mutation: The mutation of this SubsidyLogItem.
        :type mutation: SubsidylogitemMutation
        """

        self._mutation = mutation
